@model IList<PRIS.WEB.ViewModels.CandidateViewModels.ListCandidateViewModel>

@{
    ViewData["Title"] = "Kandidatai";
    ViewData["ActivePage"] = PRIS.WEB.Views.Shared.ManageCollumnNavPages.CandidateList;
    Layout = "~/Views/Shared/_LayoutWithNavSectionForCandidateView.cshtml";
}

@if (TempData["CandidateInvitedToInterviewUpdated"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["CandidateInvitedToInterviewUpdated"].ToString()
    </div>
}



<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<div class="row">
    <div class="col-5">
        <form asp-action="CandidateList" method="get">
            <div class="form-actions no-color">
                <p>
                    Miesto filtras:
                    <fieldset class="form-group">
                        <select name="City" id="City" asp-items=ViewBag.Cities class="form-control"><option value=null>Visi</option></select>
                    </fieldset>
                    <input type="submit" value="Rodyti" class="btn btn-outline-dark d-block my-1" />
                </p>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-5">
        <div class="form-actions no-color mt-2">
            Kandidatų imties pokalbiams skaičius:
            <select id="ddl" name="ddl" onmousedown="this.value='';" onchange="name1(this.value);" class="form-control mt-3">

                @for (int i = 1; i <= Model.Count; i++)
                {
                    <option value=@i>@i</option>
                }
            </select>
        </div>
    </div>
</div>

<form method="post" class="form-horizontal" role="form">
    <input id="submitApplication" type="submit" value="Patvirtinti kandidatus pokalbiui" class="btn btn-outline-dark my-2" />
    <table class="table">
        <thead>
            <tr>
                <th>
                    NR
                </th>
                <th>
                    Vardas Pavardė
                </th>
                <th>
                    Programa (I-as pasirinkimas)
                </th>
                <th>
                    Testo data, vieta
                </th>
                <th>
                    Testo balas
                </th>
                <th>
                    Surinktų balų % nuo maksimalaus
                </th>
                <th>
                    Kvietimas į pokalbį
                </th>
                <th>
                    Kandidato duomenų redagavimas
                </th>
                <th>
                    Testo rezultatų redagavimas
                </th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @(i + 1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].Firstname) @Html.DisplayFor(modelItem => modelItem[i].Lastname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].FirstModule)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].TestDate) @Html.DisplayFor(modelItem => modelItem[i].TestCity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].TestResult)
                    </td>

                    <td>
                        @if (Model[i].MaxResult != 0)
                        {
                            @Math.Round((Model[i].TestResult / Model[i].MaxResult) * 100, 2)
                        }
                        %
                    </td>
                    <td>
                        @Html.HiddenFor(it => it[i].CandidateID)

                        @if (Model[i].InvitedToInterview == true)
                        {

                            @Html.CheckBox("chkBoxReadOnly", true, new { disabled = "disabled" })
                            @Html.HiddenFor(modelItem => modelItem[i].InvitedToInterview)
                        }
                        else
                        {
                            @Html.CheckBoxFor(modelItem => modelItem[i].InvitedToInterview, new { id = i })
                        }
                    </td>
                    <td>
                        <a asp-action="EditCandidate" asp-route-id="@Model[i].CandidateID">Redaguoti</a>
                    </td>
                    <td>
                        @if (Model[i].InvitedToInterview == true)
                        {
                            <text>Kandidatas patvirtintas</text>
                        }
                        else
                        {
                            <a asp-action="AddTaskResult" asp-route-id="@Model[i].CandidateID">Pridėti balus</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

<script>
    function name1(last) {
        var i;
        for (i = 0; i < last; i++) {
            document.getElementById(i).checked = true;
        }
    }
</script>