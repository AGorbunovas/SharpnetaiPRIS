@model IList<PRIS.WEB.ViewModels.CandidateViewModels.ListCandidateViewModel>

@{
    ViewData["Title"] = "List";
    Layout = "~/Views/Shared/_LayoutWithNavSectionForCandidateView.cshtml";
}

@if (TempData["CandidateInvitedToInterviewUpdated"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["CandidateInvitedToInterviewUpdated"].ToString()
    </div>
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="List" method="get">
    <div class="form-actions no-color">
        <p>
            Miesto filtras: <input type="text" name="City"  />
            @*<input type="submit" value="Ieškoti" class="btn btn-default" />*@
        </p>
    </div>
</form>

<form method="post" class="form-horizontal" role="form">
    <input id="submitApplication" type="submit" value="Patvirtinti kandidatus pokalbiui" class="btn btn-outline-dark mb-2" />
    <table class="table">
        <thead>
            <tr>
                <th>
                    Vardas Pavardė
                </th>
                <th>
                    Programa (I-as pasirinkimas)
                </th>
                <th>
                    Testo data, vieta
                </th>
                <th>
                    Testo balas
                </th>
                <th>
                    Surinktų balų % nuo maksimalaus
                </th>
                <th>
                    Kvietimas į pokalbį
                </th>
                <th>
                    Kandidato duomenų redagavimas
                </th>
                <th>
                    Testo rezultatų redagavimas
                </th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].Firstname) @Html.DisplayFor(modelItem => modelItem[i].Lastname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].FirstModule)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].TestDate) @Html.DisplayFor(modelItem => modelItem[i].TestCity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => modelItem[i].TestResult)
                    </td>

                    <td>
                        @if (Model[i].MaxResult != 0)
                        {
                            @Math.Round((Model[i].TestResult / Model[i].MaxResult) * 100, 2)
                        }
                        %
                    </td>
                    <td>
                        @Html.HiddenFor(it => it[i].CandidateID)
                        @Html.CheckBoxFor(it => it[i].InvitedToInterview, new { id=i})
                    </td>
                    <td>
                        <a asp-action="EditCandidate" asp-route-id="@Model[i].CandidateID">Redaguoti</a>
                    </td>
                    <td>
                        @if (Model[i].InvitedToInterview == true)
                        {
                            <text>Kandidatas patvirtintas</text>
                        }
                        else
                        {
                            <a asp-action="AddTaskResult" asp-route-id="@Model[i].CandidateID">Pridėti balus</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

